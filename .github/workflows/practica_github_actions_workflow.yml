name: Practica Github Actions 
on: [push]
jobs:

  linterJob:

    runs-on: ubuntu-latest

    steps:
      -  uses: actions/checkout@v2
      -  run: npm install
      -  run: npm run lint

  cypressJob:

    runs-on: ubuntu-latest
    needs: linterJob

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    
    steps:
      - uses: actions/checkout@v2
      - id: cypress
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          config-file: cypress.json
          build: npm run build
          start: npm start

      - run: echo ${{ steps.cypress.outcome }} > result.txt

      - uses: actions/upload-artifact@v2
        with:
          name: result.txt
          path: ./result.txt

  badgeJob:
      runs-on: ubuntu-latest
      if: always()
      needs: cypressJob
      steps:
        - uses: actions/checkout@v2
        - uses: actions/download-artifact@v2
          with:
            name: result.txt

        - id: cypressTest
          run: |
              echo "::set-output name=cypressOut::$(cat result.txt)"
              npm install @actions/core

        - uses: ./.github/actions/update_readme/
          id: readme
          with:
            cypressTest: ${{ steps.cypressTest.outputs.cypressOut }}
        
        - run: | 
              git config user.email "hachemico@gmail.com"
              git config user.name "hachemico"
              git pull
              git add .
              git commit --allow-empty -m "Readme" 
              git remote set-url origin https://hachemico:${{ secrets.GH_TOKEN }}@github.com/hachemico/practica_github_actions.git
              git push  
  deployJob:
    needs: cypressJob
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VTOKEN }}
          vercel-org-id: ${{ secrets.VID}}
          vercel-project-id: ${{ secrets.VPROJECT}}

  notificationJob:
    needs: [linterJob, cypressJob, badgeJob, deployjob]
    runs-on: ubuntu-latest
    if: always()
    steps:
      
      - uses: actions/checkout@v2
      - uses: ./.github/actions/send_email
        with:
          GMAIL_PASS: ${{ secrets.POSTMAIL_SECRET }}
          RES_LINT: ${{ needs.linterJob.result }}
          RES_TEST: ${{ needs.badgeJob.result }}
          RES_UPDATE: ${{ needs.badgeJob.result }}
          RES_DEPLOY: ${{ needs.deployJob.result }}
          EMAIL_NOTIF: ${{secrets.TOEMAIL}}